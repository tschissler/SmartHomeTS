@page "/"
@using Azure.Data.Tables;
@using DataContracts;

<div class="d-flex justify-content-between align-items-center mb-3">
    <h1>Raumklima</h1>
    <button class="btn btn-primary" @onclick="LoadData">Refresh Data</button>
</div>

<div class="container">
    <div class="row">
        @foreach (var partitionKey in PartitionKeys.Keys)
        {
            if (!partitionKey.Contains("temperature"))
            {
				continue;
			}
            <div class="col-md-3 col-6">
                <DataValueTextControl Value="@Data[partitionKey].Value"
                                      Unit="°C"
                                      Value2="@Data[partitionKey.Replace("_temperature", "_humidity")].Value"
                                      Unit2="%"
                                      LastUpdated="@Data[partitionKey].LocalTime"
                                      title="@PartitionKeys[partitionKey]">
                </DataValueTextControl>
            </div>
        }
    </div>
    <div class="row mb-3">
        <DataChart HiResTableName="@hiResTableName"
                   LoResTableName="@loResTableName"
                   StorageAccountName="@storageAccountName"
                   StorageAccountKey="@Secrets.StorageSecrets.StorageKey"
                   StorageUri="@Secrets.StorageSecrets.StorageUri"
                   dataSeriesMetaData="@ChartPartitionKeys"></DataChart>
    </div>
</div>
@code {
    private TableClient tableClient;
    private Dictionary<string, DataValueTableEntity> Data = new();

    string storageAccountName = "smarthomestorageprod";
    string hiResTableName = "SmartHomeClimateRawData";
    string loResTableName = "SmartHomeClimateHourAggregationData";

    private Dictionary<string, string> PartitionKeys = new()
    {
        { "1c50f3ab6224_temperature", "Außen" },
        { "1420381fb608_temperature", "Wohnzimmer" },
        { "1c50f3ab6224_humidity", "Außen Luftfeuchte" },
        { "1420381fb608_humidity", "Wohnzimmer Luftfeuchte" },
    };

    public List<DataSeriesMetaData> ChartPartitionKeys = new()
    {
        new DataSeriesMetaData { Id="1", Label = "Außentemperatur", PartitionKey = "1c50f3ab6224_temperature", IsChecked = true, Color = "blue" },
        new DataSeriesMetaData { Id="2", Label = "M3 Gästezimmer", PartitionKey = "44dbf3ab6224_temperature", IsChecked = false, Color = "grey" },
        new DataSeriesMetaData { Id="3", Label = "M3 Esszimmer", PartitionKey = "a86d2b286f24_temperature", IsChecked = false, Color = "magenta" }, 
        new DataSeriesMetaData { Id="4", Label = "Batteriesensor", PartitionKey = "1420381fb608_temperature", IsChecked = true, Color = "green" }
    };

    protected override void OnInitialized()
    {
        LoadData();
    }

    private void LoadData()
    {
        Data = new Dictionary<string, DataValueTableEntity>();
        tableClient = new TableClient(
            new Uri(Secrets.StorageSecrets.StorageUri),
            hiResTableName,
            new TableSharedKeyCredential(storageAccountName, Secrets.StorageSecrets.StorageKey)
            );

        foreach (var partitionKey in PartitionKeys.Keys)
        {
            var queryString =
                $"PartitionKey eq '{partitionKey}' ";
            var query = tableClient.Query<DataValueTableEntity>(queryString, 1);
            if (query.Any())
            {
                Data.Add(partitionKey, query.First());
            }
        };

        InvokeAsync(StateHasChanged);
    }
}