@using DataContracts
@using MQTTnet
@using MQTTnet.Protocol
@using SmartHome.Web.Services
@using SmartHomeWebManagers
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.LinearGauge
@using System.Text.Json
@using SharedContracts
@using MouseEventArgs = Microsoft.AspNetCore.Components.Web.MouseEventArgs
@using Placement = Syncfusion.Blazor.Inputs.Placement
@using Orientation = Syncfusion.Blazor.LinearGauge.Orientation
@using Syncfusion.Blazor.Popups

<div class="carBox">
    <div class="carImageContainer">
        <img class="carImage" src="/images/@(GetCarImage(CarStatusData.Brand))" />
        <br />
        <span style="font-size: 0.7rem">@(new MarkupString(CarStatusData.LastUpdate?.ToLocalTime().ToString("dd.MM.yy HH:mm:ss")??""))</span>
        <br />
        @CarStatusData.Mileage km >>
        @CarStatusData.RemainingRange km
    </div>
    <div class="carControls">
        <img class="carConnectedIcon" src="/images/@(CarStatusData.ChargerConnected ? "connected.svg" : "disconnected.svg")" />
        <img src="/images/@(IsChargingEnabled ? (PreferedChargingStation == SetChargingStation ? "dblchecked.svg" : "checked.svg" ) : "unchecked.svg")"
        @onclick="async () =>
            {
                IsChargingEnabled = !IsChargingEnabled;
                communicateSettings();
            }"
        @ondblclick="async () =>
            {
                IsChargingEnabled = true;
                PreferedChargingStation = SetChargingStation;
                communicateSettings();
            }" />
        <div class="batteryInformationContainer">
            <div class="batteryBorder">
                <div class="batteryLevel" style="height: @CarStatusData.Battery%"></div>
            </div>
            <div class="batteryLabel">
                @CarStatusData.Battery % / @CarStatusData.ChargingTarget %<br />
                @(CarStatusData.ChargingEndTime.HasValue ? "Bis: " + CarStatusData.ChargingEndTime?.ToLocalTime().ToString("HH:mm") : "")
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public CarStatusData CarStatusData { get; set; }
    [Parameter]
    public bool IsChargingEnabled { get; set; }
    [Parameter]
    public ChargingStation PreferedChargingStation { get; set; }
    [Parameter]
    public ChargingStation SetChargingStation { get; set; }
    [Parameter]
    public EventCallback CommunicateSettings { get; set; }

    [Parameter]
    public EventCallback<bool> IsChargingEnabledChanged { get; set; }
    [Parameter]
    public EventCallback<ChargingStation> PreferedChargingStationChanged { get; set; }
    private void OnIsChargingEnabledChanged(bool newValue)
    {
        IsChargingEnabled = newValue;
        IsChargingEnabledChanged.InvokeAsync(newValue);
    }
    private void OnPreferedChargingStationChanged(ChargingStation newValue)
    {
        PreferedChargingStation = newValue;
        PreferedChargingStationChanged.InvokeAsync(newValue);
    }

    public async void communicateSettings()
    {
        await IsChargingEnabledChanged.InvokeAsync(IsChargingEnabled);
        await PreferedChargingStationChanged.InvokeAsync(PreferedChargingStation);
        await CommunicateSettings.InvokeAsync();
    }

    public string GetCarImage(string brand)
    {
        switch (brand.ToLower())
        {
            case "bmw":
                return "BMW.webp";
            case "mini":
                return "CarBrands.MINI_VehicleViewDirection.FRONT_LEFT.jpg";
            case "vw":
                return "ID4.png";
        }
        return "empty.png";
    }
}