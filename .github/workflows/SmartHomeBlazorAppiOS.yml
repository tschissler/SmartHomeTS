name: SmartHomeBlazorApp iOS CD

on:
  push:
    branches: ["main"]
    paths:
      - .github/workflows/SmartHomeBlazorAppiOS.yml
      - SmartHome.Web/SmartHomeBlazorApp/**

env:
  PROJECT_NAME: SmartHomeBlazorApp
  CONFIGURATION: Release
  DOTNET_VERSION: 8.0.x
  XCODE_VERSION: 15.1
  WORKING_DIRECTORY: SmartHome.Web/SmartHomeBlazorApp
  
jobs:
  build-and-deploy:
    runs-on: [self-hosted, macOS] 

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2 

    - name: Ensure using the right XCode version
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: ${{ env.XCODE_VERSION }}
        
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Install MAUI workload
      run: dotnet workload install maui
      
    - name: Restore NuGet Packages
      run: dotnet restore  "${{ env.WORKING_DIRECTORY }}"

    - name: Build .NET MAUI iOS Project
      run: dotnet build "${{ env.WORKING_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }} --no-restore

    - name: .NET MAUI - Apple Provisioning
      # You may pin to the exact commit or the version.
      uses: maui-actions/apple-provisioning@2d313f3be61a3c001d0550951fd049811e351d70
      #uses: maui-actions/apple-provisioning@2
      with:
        # Keychain file to import certificates to (can leave blank, will default to build.keychain-db). Example, "build.keychain-db".
        #keychain: # optional
        # Keychain password for the specified keychain (can leave blank).  Example, "build".
        #keychain-password: # optional
        # Apple certificate to import into the keychain.  This should be either the filename of the .p12/.pfx certificate itself, or the name of an environment variable containing a Base64 encoded string representation of the binary .p12/.pfx certificate file. Example, "path/to/dist.p12" or "APPLE_DIST_CERT".
        #certificate: # optional
        # Passphrase for the specified certificate file if required.
        #certificate-passphrase: # optional
        # Comma separated list of one or more app bundle-identifiers to filter provisioning profiles for.  Example, "com.mycompany.myapp" or "com.mycompany.myapp1,com.mycompany.myapp2".
        bundle-identifiers: com.agilemax.App.SmartHome.Blazor
        # Comma separated list of one or more types of provisioning profiles to download and install for the matching bundle-identifier(s).  Example, "IOS_APP_ADHOC" OR "IOS_APP_ADHOC,IOS_APP_STORE".
        profile-types: IOS_APP_STORE
        # The App Store Connect API issuer ID or name of an environment variable containing the value.  Example, "ABC123XYZ". This value can also be set using the "APP_STORE_CONNECT_KEY_ID" environment variable.
        app-store-connect-key-id: ${{ secrets.IOSAPPSTORE_KEY_ID }}
        # The App Store Connect API issuer ID or name of an environment variable containing the value.  Example, "aaaa-1111-22222-bbbb-cccc". This value can also be set using the "APP_STORE_CONNECT_ISSUER_ID" environment variable.
        app-store-connect-issuer-id: ${{ secrets.IOSAPPSTORE_ISSUER_ID }}
        # The App Store Connect API private key.  This should be either the filename of the .p8 private key itself, or the name of an environment variable containing the string contents of the .p8 private key file. Example, "path/to/key.p8" or "APP_STORE_CONNECT_PRIVATE_KEY". This value can also be set using the "APP_STORE_CONNECT_PRIVATE_KEY" environment variable.
        app-store-connect-private-key: ${{ secrets.IOSAPPSTORE_PRIVATE_KEY }}
          
    #- name: Download Apple Provisioning Profiles
    #  uses: Apple-Actions/download-provisioning-profiles@v1
    #  with:
    #    bundle-id: 'com.agilemax.App.SmartHome.Blazor'
    #    issuer-id: ${{ secrets.IOSAPPSTORE_ISSUER_ID }}
    #    api-key-id: ${{ secrets.IOSAPPSTORE_KEY_ID }}
    #    api-private-key: ${{ secrets.IOSAPPSTORE_PRIVATE_KEY }}
    #    profile-type: 
    #- name: Install Fastlane
    #  run: |  # Install Fastlane for app signing and uploading
    #    sudo gem install fastlane

    #- name: Import Certificates
    #  uses: apple-actions/import-codesign-certs@v1
    #  with:
    #    p12-file-base64: ${{ secrets.P12_FILE_BASE64 }}  # Encoded .p12 file
    #    p12-password: ${{ secrets.P12_PASSWORD }}  # Password for the .p12 file

    #- name: Build and Sign IPA
    #  run: fastlane gym --scheme "YourScheme" --export_method "app-store"  # Replace "YourScheme" with your project's scheme

    #- name: Upload to App Store Connect
    #  uses: apple-actions/upload-app-store@v1
    #  with:
    #    app-path: ./path/to/your/app.ipa  # Path to your IPA file
    #    issuer-id: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
    #    key-id: ${{ secrets.APP_STORE_CONNECT_KEY_ID }}
    #    private-key: ${{ secrets.APP_STORE_CONNECT_PRIVATE_KEY }}
    #    app-id: "com.example.app"  # Replace with your app's bundle identifier

    #- name: Complete Deployment
    #  run: echo "Deployment to App Store Connect complete"
