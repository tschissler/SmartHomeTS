name: Smarthome.Web CD 

on:
  push:
    branches: [ "main" ]
    paths:
      - .github/workflows/Smarthome.Web.yml
      - SmartHome.Web/**
      - '!SmartHome.Web/SmartHomeBlazorApp/**'
  workflow_dispatch:
    
env:
  PROJECT_NAME: SmartHome.Web
  IMAGE_NAME: smarthomeweb
  
jobs:
  build:
    runs-on: ubuntu-latest-arm64
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          
    - name: Build and publish Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./${{ env.PROJECT_NAME }}/Dockerfile
        push: true
        tags: |
          tschissler/${{ env.IMAGE_NAME }}:${{ github.run_id }}
          tschissler/${{ env.IMAGE_NAME }}:latest
          
  deploy:
    needs: build
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v3
        
    - name: Deploy to Kubernetes if deployment does not exist yet
      run: |
        if ! kubectl get deployment ${{ env.IMAGE_NAME }}; then
          kubectl apply -f ./${{ env.PROJECT_NAME }}/kube.yaml
        fi
        
    - name: Update Kubernetes deployment
      run: |        
        kubectl set image deployments/${{ env.IMAGE_NAME }} ${{ env.IMAGE_NAME }}=tschissler/${{ env.IMAGE_NAME }}:${{ github.run_id }} 
        kubectl set env deployment/${{ env.IMAGE_NAME }} SyncfusionLicenseKey="${{ secrets.SYNCFUSION_LICENSEKEY }}"
        kubectl set env deployment/${{ env.IMAGE_NAME }} SmartHomeStorageUri="${{ secrets.SMARTHOMESTORAGEURI }}"
        kubectl set env deployment/${{ env.IMAGE_NAME }} SmartHomeStorageKey="${{ secrets.SMARTHOMESTORAGEKEY }}"
        kubectl set env deployment/${{ env.IMAGE_NAME }} INFLUXDB_URL="${{ secrets.INFLUXDB_URL }}"
        kubectl set env deployment/${{ env.IMAGE_NAME }} INFLUXDB_ORG="${{ secrets.INFLUXDB_ORG }}"
        kubectl set env deployment/${{ env.IMAGE_NAME }} INFLUXDB_TOKEN="${{ secrets.INFLUXDB_TOKEN }}"
