using CommunityToolkit.Mvvm.ComponentModel;

namespace SharedContracts
{
    public record ChargingResult (
            int InsideChargingPowerWatts,
            int OutsideChargingPowerWatts,
            int InsideChargingCurrentmA,
            int OutsideChargingCurrentmA
        );

    public partial class ChargingSituation : ObservableObject
    {
        /// <summary>
        /// Is a car connected to the inside charging station and ready for charging
        /// </summary>
        [ObservableProperty]
        private bool insideConnected;

        /// <summary>
        /// Is a car connected to the outside charging station and ready for charging
        /// </summary>
        [ObservableProperty]
        private bool outsideConnected;

        /// <summary>
        /// The current power consumption of the house in Watts
        /// </summary>
        [ObservableProperty]
        private int houseConsumptionPower;

        /// <summary>
        /// Current power consumption of the inside charging station in Watts
        /// </summary>
        [ObservableProperty]
        private int insideCurrentChargingPower;

        /// <summary>
        /// Current power consumption of the outside charging station in Watts
        /// </summary>
        [ObservableProperty]
        private int outsideCurrentChargingPower;

        /// <summary>
        /// Current power generated by the PV in mW
        /// </summary>
        [ObservableProperty]
        private int powerFromPV;

        /// <summary>
        /// Current power used from the grid in mW
        /// </summary>
        [ObservableProperty]
        private int powerFromGrid;

        /// <summary>
        /// The power consumed from the battery in mW, is negative if the battery is charged
        /// </summary>
        [ObservableProperty]
        private int powerFromBattery;

        /// <summary>
        /// The current charge level of the battery in percent  
        /// </summary>
        [ObservableProperty]
        private int batteryLevel;

        /// <summary>
        /// The power that should be used for charging the car inside in Watts
        /// </summary>
        [ObservableProperty]
        private int insideChargingLatestmA;

        /// <summary>
        /// The power that should be used for charging the car outside in Watts
        /// </summary>
        [ObservableProperty]
        private int outsideChargingLatestmA;

        /// <summary>
        /// The current battery level of the BMW in percent
        /// </summary>
        [ObservableProperty]
        private int bmwBatteryLevel;

        /// <summary>
        /// BMW indicates that it is ready for charging
        /// </summary>
        [ObservableProperty]
        private bool bmwReadyForCharging;

        /// <summary>
        /// Indicates when BMW data have been last updated from the server
        /// </summary>
        [ObservableProperty]
        private DateTimeOffset bmwLastUpdateFromServer;

        /// <summary>
        /// The current battery level of the VW in percent
        /// </summary>
        [ObservableProperty]
        private int vwBatteryLevel;

        /// <summary>
        /// VW indicates that it is ready for charging
        /// </summary>
        [ObservableProperty]
        private bool vwReadyForCharging;

        /// <summary>
        /// Indicates when VW data have been last updated from the server
        /// </summary>
        [ObservableProperty]
        private DateTimeOffset vwLastUpdateFromServer;

        public ChargingSituation()
        {
            insideChargingLatestmA = -1;
            outsideChargingLatestmA = -1;
        }
    }
}
